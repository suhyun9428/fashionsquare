{"ast":null,"code":"var _jsxFileName = \"/Users/sunny/Desktop/react/study_react_fe3_kimsuhyun/react-practice/src/components/SelectedCharacter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport classNames from \"classnames\";\nimport dummyData from '../DummyData/dummyData.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst koreanUnicode = ['\\u1100',\n// ㄱ\n'\\u1102',\n// ㄴ\n'\\u1103',\n// ㄷ\n'\\u1105',\n// ㄹ\n'\\u1106',\n// ㅁ\n'\\u1107',\n// ㅂ\n'\\u1109',\n// ㅅ\n'\\u110B',\n// ㅇ\n'\\u110C',\n// ㅈ\n'\\u110E',\n// ㅊ\n'\\u110F',\n// ㅋ\n'\\u1110',\n// ㅌ\n'\\u1111',\n// ㅍ\n'\\u1112' // ㅎ\n];\nconst koreanUniCodeList = {\n  '\\u1100': [0xAC00, 0xB098],\n  // '가' ~ '낗'\n  '\\u1102': [0xB098, 0xB2E4],\n  // '나' ~ '닣'\n  '\\u1103': [0xB2E4, 0xB77C],\n  // '다' ~ '띻'\n  '\\u1105': [0xB77C, 0xBAA8],\n  // '라' ~ '맇'\n  '\\u1106': [0xBAA8, 0xBCF4],\n  // '마' ~ '밓'\n  '\\u1107': [0xBCF4, 0xC0AC],\n  // '바' ~ '빟'\n  '\\u1109': [0xC0AC, 0xC544],\n  // '사' ~ '싷'\n  '\\u110B': [0xC544, 0xC790],\n  // '아' ~ '잏'\n  '\\u110C': [0xC790, 0xCC28],\n  // '자' ~ '짛'\n  '\\u110E': [0xCC28, 0xCE74],\n  // '차' ~ '칳'\n  '\\u110F': [0xCE74, 0xD0C0],\n  // '카' ~ '킿'\n  '\\u1110': [0xD0C0, 0xD30C],\n  // '타' ~ '팋'\n  '\\u1111': [0xD30C, 0xD558],\n  // '파' ~ '핗'\n  '\\u1112': [0xD558, 0xD7A4] // '하' ~ '힣'\n};\nconst alphabetList = Array.from({\n  length: 26\n}, (_, i) => String.fromCharCode(97 + i));\nconst SelectCharacterFilter = ({\n  currentTab\n}) => {\n  _s();\n  const [isActive, setActive] = useState(0);\n  const [selectedCharacter, setSelectedCharacter] = useState('\\u1100');\n  const [checkedList, setCheckedList] = useState([]);\n  const handleCheckChange = item => {\n    const newCheckedList = checkedList.includes(item.number) ? checkedList.filter(checkedItem => checkedItem !== item.number) : [...checkedList, item.number];\n    setCheckedList(newCheckedList);\n  };\n  const filterItems = (currentTab === 1 ? dummyData.ApbBrandList : dummyData.KoreanBrandList).filter(item => {\n    if (currentTab === 1) {\n      // 알파벳 필터링\n      return item.name[0].toUpperCase() === selectedCharacter;\n    } else if (currentTab === 0) {\n      // 한글 초성 필터링\n      const firstWord = item.name.charCodeAt(0);\n      const [start, end] = koreanUniCodeList[selectedCharacter];\n      return firstWord >= start && firstWord < end;\n    }\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: currentTab === 1 ? alphabetList.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedCharacter(item),\n            className: classNames({\n              active: item === selectedCharacter\n            }),\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)) : koreanUnicode.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedCharacter(item),\n            className: classNames({\n              active: item === selectedCharacter\n            }),\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filterItems.length > 0 ? filterItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `checkbox-${item.number}`,\n            checked: checkedList.includes(item.number),\n            onChange: () => handleCheckChange(item),\n            \"aria-checked\": checkedList.includes(item.number)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `checkbox-${item.number}`,\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this)]\n        }, item.number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\uC120\\uD0DD\\uD55C \\uD544\\uD130\\uC5D0 \\uD574\\uB2F9\\uD558\\uB294 \\uBE0C\\uB79C\\uB4DC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(SelectCharacterFilter, \"5il9StL3TPwb3wsnqFlwxTOt9Bc=\");\n_c = SelectCharacterFilter;\nexport default SelectCharacterFilter;\nvar _c;\n$RefreshReg$(_c, \"SelectCharacterFilter\");","map":{"version":3,"names":["React","useState","useEffect","classNames","dummyData","jsxDEV","_jsxDEV","Fragment","_Fragment","koreanUnicode","koreanUniCodeList","alphabetList","Array","from","length","_","i","String","fromCharCode","SelectCharacterFilter","currentTab","_s","isActive","setActive","selectedCharacter","setSelectedCharacter","checkedList","setCheckedList","handleCheckChange","item","newCheckedList","includes","number","filter","checkedItem","filterItems","ApbBrandList","KoreanBrandList","name","toUpperCase","firstWord","charCodeAt","start","end","children","map","idx","onClick","className","active","fileName","_jsxFileName","lineNumber","columnNumber","type","id","checked","onChange","htmlFor","_c","$RefreshReg$"],"sources":["/Users/sunny/Desktop/react/study_react_fe3_kimsuhyun/react-practice/src/components/SelectedCharacter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classNames from \"classnames\";\nimport dummyData from '../DummyData/dummyData.json';\n\nconst koreanUnicode = [\n    '\\u1100', // ㄱ\n    '\\u1102', // ㄴ\n    '\\u1103', // ㄷ\n    '\\u1105', // ㄹ\n    '\\u1106', // ㅁ\n    '\\u1107', // ㅂ\n    '\\u1109', // ㅅ\n    '\\u110B', // ㅇ\n    '\\u110C', // ㅈ\n    '\\u110E', // ㅊ\n    '\\u110F', // ㅋ\n    '\\u1110', // ㅌ\n    '\\u1111', // ㅍ\n    '\\u1112', // ㅎ\n];\n\nconst koreanUniCodeList = {\n    '\\u1100': [0xAC00, 0xB098],  // '가' ~ '낗'\n    '\\u1102': [0xB098, 0xB2E4],  // '나' ~ '닣'\n    '\\u1103': [0xB2E4, 0xB77C],  // '다' ~ '띻'\n    '\\u1105': [0xB77C, 0xBAA8],  // '라' ~ '맇'\n    '\\u1106': [0xBAA8, 0xBCF4],  // '마' ~ '밓'\n    '\\u1107': [0xBCF4, 0xC0AC],  // '바' ~ '빟'\n    '\\u1109': [0xC0AC, 0xC544],  // '사' ~ '싷'\n    '\\u110B': [0xC544, 0xC790],  // '아' ~ '잏'\n    '\\u110C': [0xC790, 0xCC28],  // '자' ~ '짛'\n    '\\u110E': [0xCC28, 0xCE74],  // '차' ~ '칳'\n    '\\u110F': [0xCE74, 0xD0C0],  // '카' ~ '킿'\n    '\\u1110': [0xD0C0, 0xD30C],  // '타' ~ '팋'\n    '\\u1111': [0xD30C, 0xD558],  // '파' ~ '핗'\n    '\\u1112': [0xD558, 0xD7A4],  // '하' ~ '힣'\n};\n\nconst alphabetList = Array.from({ length: 26 }, (_, i) => String.fromCharCode(97 + i));\n\nconst SelectCharacterFilter = ({ currentTab }) => {\n    const [isActive, setActive] = useState(0);\n    const [selectedCharacter, setSelectedCharacter] = useState('\\u1100');\n    const [checkedList, setCheckedList] = useState([]);\n\n    const handleCheckChange = (item) => {\n        const newCheckedList = checkedList.includes(item.number)\n            ? checkedList.filter((checkedItem) => checkedItem !== item.number)\n            : [...checkedList, item.number];\n        setCheckedList(newCheckedList);\n    };\n\n    const filterItems = (currentTab === 1\n        ? dummyData.ApbBrandList\n        : dummyData.KoreanBrandList\n    ).filter(item => {\n        if (currentTab === 1) { // 알파벳 필터링\n            return item.name[0].toUpperCase() === selectedCharacter;\n        } else if (currentTab === 0) { // 한글 초성 필터링\n            const firstWord = item.name.charCodeAt(0);\n            const [start, end] = koreanUniCodeList[selectedCharacter];\n            return firstWord >= start && firstWord < end;\n        }\n        return true;\n    });\n\n    return (\n        <>\n            <div>\n                <ul>\n                    {currentTab === 1\n                        ? alphabetList.map((item, idx) => (\n                            <li key={idx}>\n                                <button\n                                    onClick={() => setSelectedCharacter(item)}\n                                    className={classNames({ active: item === selectedCharacter })}\n                                >\n                                    {item}\n                                </button>\n                            </li>\n                        ))\n                        : koreanUnicode.map((item, idx) => (\n                            <li key={idx}>\n                                <button\n                                    onClick={() => setSelectedCharacter(item)}\n                                    className={classNames({ active: item === selectedCharacter })}\n                                >\n                                    {item}\n                                </button>\n                            </li>\n                        ))}\n                </ul>\n            </div>\n\n            <div>\n                <ul>\n                    {filterItems.length > 0\n                        ? filterItems.map((item) => (\n                            <li key={item.number}>\n                                <input\n                                    type=\"checkbox\"\n                                    id={`checkbox-${item.number}`}\n                                    checked={checkedList.includes(item.number)}\n                                    onChange={() => handleCheckChange(item)}\n                                    aria-checked={checkedList.includes(item.number)}\n                                />\n                                <label htmlFor={`checkbox-${item.number}`}>\n                                    {item.name}\n                                </label>\n                            </li>\n                        ))\n                        : <li>선택한 필터에 해당하는 브랜드가 없습니다.</li>}\n                </ul>\n            </div>\n        </>\n    );\n};\n\nexport default SelectCharacterFilter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}