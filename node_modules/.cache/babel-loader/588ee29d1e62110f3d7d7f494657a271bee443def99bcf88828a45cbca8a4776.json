{"ast":null,"code":"var _jsxFileName = \"/Users/sunny/Desktop/react/study_react_fe3_kimsuhyun/react-practice/src/components/SelectedCharacter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport classNames from \"classnames\";\nimport dummyData from '../DummyData/dummyData.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst koreanUnicode = ['\\u1100',\n// ㄱ\n'\\u1102',\n// ㄴ\n'\\u1103',\n// ㄷ\n'\\u1105',\n// ㄹ\n'\\u1106',\n// ㅁ\n'\\u1107',\n// ㅂ\n'\\u1109',\n// ㅅ\n'\\u110B',\n// ㅇ\n'\\u110C',\n// ㅈ\n'\\u110E',\n// ㅊ\n'\\u110F',\n// ㅋ\n'\\u1110',\n// ㅌ\n'\\u1111',\n// ㅍ\n'\\u1112' // ㅎ\n];\nconst koreanUniCodeList = {\n  '\\u1100': [0xAC00, 0xB098],\n  // '가' ~ '낗'\n  '\\u1102': [0xB098, 0xB2E4],\n  // '나' ~ '닣'\n  '\\u1103': [0xB2E4, 0xB77C],\n  // '다' ~ '띻'\n  '\\u1105': [0xB77C, 0xBAA8],\n  // '라' ~ '맇'\n  '\\u1106': [0xBAA8, 0xBCF4],\n  // '마' ~ '밓'\n  '\\u1107': [0xBCF4, 0xC0AC],\n  // '바' ~ '빟'\n  '\\u1109': [0xC0AC, 0xC544],\n  // '사' ~ '싷'\n  '\\u110B': [0xC544, 0xC790],\n  // '아' ~ '잏'\n  '\\u110C': [0xC790, 0xCC28],\n  // '자' ~ '짛'\n  '\\u110E': [0xCC28, 0xCE74],\n  // '차' ~ '칳'\n  '\\u110F': [0xCE74, 0xD0C0],\n  // '카' ~ '킿'\n  '\\u1110': [0xD0C0, 0xD30C],\n  // '타' ~ '팋'\n  '\\u1111': [0xD30C, 0xD558],\n  // '파' ~ '핗'\n  '\\u1112': [0xD558, 0xD7A4] // '하' ~ '힣'\n};\nconst alphabetList = Array.from({\n  length: 26\n}, (_, i) => String.fromCharCode(97 + i));\nconst SelectCharacterFilter = ({\n  currentTab\n}) => {\n  _s();\n  const [selectedCharacter, setSelectedCharacter] = useState(() => {\n    return currentTab === 1 ? 'a' : '\\u1100';\n  });\n  const [checkedList, setCheckedList] = useState([]);\n  const [filterItems, setFilterItems] = useState([]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  useEffect(() => {\n    const data = currentTab === 0 ? dummyData.KoreanBrandList : dummyData.ApbBrandList;\n    const filtered = data.filter(item => {\n      if (currentTab === 0) {\n        const firstChar = item.name.charCodeAt(0);\n        const [start, end] = koreanUniCodeList[selectedCharacter] || [];\n        return firstChar >= start && firstChar < end;\n      }\n      if (currentTab === 1) {\n        const firstChar = item.name.charAt(0).toUpperCase();\n        return firstChar === selectedCharacter.toUpperCase();\n      }\n      return false;\n    });\n    setFilterItems(filtered);\n\n    // 체크된 항목들이 현재 필터링된 목록에 있는지 확인하고, 없는 항목은 체크 해제\n    const updatedCheckedList = checkedList.filter(number => filtered.some(item => item.number === number));\n    setCheckedList(updatedCheckedList);\n  }, [selectedCharacter, currentTab, checkedList]);\n  useEffect(() => {\n    const selected = checkedList.map(number => {\n      return dummyData.KoreanBrandList.find(item => item.number === number) || dummyData.ApbBrandList.find(item => item.number === number);\n    });\n    setSelectedItems(selected);\n  }, [checkedList]);\n  const handleCheckChange = item => {\n    const newCheckedList = checkedList.includes(item.number) ? checkedList.filter(checkedItem => checkedItem !== item.number) : [...checkedList, item.number];\n    setCheckedList(newCheckedList);\n  };\n  const handleClick = char => {\n    setSelectedCharacter(char);\n    console.log(char);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box__characters-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list__characters\",\n        children: (currentTab === 1 ? alphabetList : koreanUnicode).map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-item\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleClick(item),\n            className: classNames('button__character', {\n              'button__character--active': item === selectedCharacter\n            }),\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box__brand-info\",\n      children: filterItems.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list__brand\",\n        children: filterItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `checkbox-${item.number}`,\n            className: \"form__checkbox\",\n            checked: checkedList.includes(item.number),\n            onChange: () => handleCheckChange(item),\n            \"aria-checked\": checkedList.includes(item.number)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `checkbox-${item.number}`,\n            className: \"form__label\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }, this)]\n        }, item.number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box__brand-notice\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text\",\n          children: \"\\uBE0C\\uB79C\\uB4DC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uB2E4\\uB978 \\uBE0C\\uB79C\\uB4DC\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box__filtered-wrap\",\n      children: [selectedItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box__selected-brand\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list__selected-brands\",\n          children: selectedItems.map((selectedItem, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text__brand\",\n              children: selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"button__cancel\",\n              onClick: () => setCheckedList(checkedList.filter(id => id !== selectedItem.number)),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"for-a11y\",\n                children: \"\\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 37\n            }, this)]\n          }, (selectedItem === null || selectedItem === void 0 ? void 0 : selectedItem.number) || idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box__reset\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"button__reset\",\n            onClick: () => setCheckedList([]),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"for-a11y\",\n              children: \"\\uC120\\uD0DD \\uCD08\\uAE30\\uD654\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box__filtered-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"button button__cancel\",\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"button button__confirm\",\n          children: \"\\uC801\\uC6A9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(SelectCharacterFilter, \"8aYlYz94PFkussvAs2wXsIedcaM=\");\n_c = SelectCharacterFilter;\nexport default SelectCharacterFilter;\nvar _c;\n$RefreshReg$(_c, \"SelectCharacterFilter\");","map":{"version":3,"names":["React","useState","useEffect","classNames","dummyData","jsxDEV","_jsxDEV","Fragment","_Fragment","koreanUnicode","koreanUniCodeList","alphabetList","Array","from","length","_","i","String","fromCharCode","SelectCharacterFilter","currentTab","_s","selectedCharacter","setSelectedCharacter","checkedList","setCheckedList","filterItems","setFilterItems","selectedItems","setSelectedItems","data","KoreanBrandList","ApbBrandList","filtered","filter","item","firstChar","name","charCodeAt","start","end","charAt","toUpperCase","updatedCheckedList","number","some","selected","map","find","handleCheckChange","newCheckedList","includes","checkedItem","handleClick","char","console","log","children","className","idx","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","id","checked","onChange","htmlFor","selectedItem","_c","$RefreshReg$"],"sources":["/Users/sunny/Desktop/react/study_react_fe3_kimsuhyun/react-practice/src/components/SelectedCharacter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classNames from \"classnames\";\nimport dummyData from '../DummyData/dummyData.json';\n\nconst koreanUnicode = [\n    '\\u1100', // ㄱ\n    '\\u1102', // ㄴ\n    '\\u1103', // ㄷ\n    '\\u1105', // ㄹ\n    '\\u1106', // ㅁ\n    '\\u1107', // ㅂ\n    '\\u1109', // ㅅ\n    '\\u110B', // ㅇ\n    '\\u110C', // ㅈ\n    '\\u110E', // ㅊ\n    '\\u110F', // ㅋ\n    '\\u1110', // ㅌ\n    '\\u1111', // ㅍ\n    '\\u1112', // ㅎ\n];\n\nconst koreanUniCodeList = {\n    '\\u1100': [0xAC00, 0xB098],  // '가' ~ '낗'\n    '\\u1102': [0xB098, 0xB2E4],  // '나' ~ '닣'\n    '\\u1103': [0xB2E4, 0xB77C],  // '다' ~ '띻'\n    '\\u1105': [0xB77C, 0xBAA8],  // '라' ~ '맇'\n    '\\u1106': [0xBAA8, 0xBCF4],  // '마' ~ '밓'\n    '\\u1107': [0xBCF4, 0xC0AC],  // '바' ~ '빟'\n    '\\u1109': [0xC0AC, 0xC544],  // '사' ~ '싷'\n    '\\u110B': [0xC544, 0xC790],  // '아' ~ '잏'\n    '\\u110C': [0xC790, 0xCC28],  // '자' ~ '짛'\n    '\\u110E': [0xCC28, 0xCE74],  // '차' ~ '칳'\n    '\\u110F': [0xCE74, 0xD0C0],  // '카' ~ '킿'\n    '\\u1110': [0xD0C0, 0xD30C],  // '타' ~ '팋'\n    '\\u1111': [0xD30C, 0xD558],  // '파' ~ '핗'\n    '\\u1112': [0xD558, 0xD7A4],  // '하' ~ '힣'\n};\n\nconst alphabetList = Array.from({ length: 26 }, (_, i) => String.fromCharCode(97 + i));\n\nconst SelectCharacterFilter = ({currentTab}) => {\n    const [selectedCharacter, setSelectedCharacter] = useState(() => {\n        return currentTab === 1 ? 'a' : '\\u1100';\n      });\n    const [checkedList, setCheckedList] = useState([]);\n    const [filterItems, setFilterItems] = useState([]);\n    const [selectedItems, setSelectedItems] = useState([]);\n\n    useEffect(() => {\n        const data = currentTab === 0 ? dummyData.KoreanBrandList : dummyData.ApbBrandList;\n        const filtered = data.filter(item => {\n            if (currentTab === 0) {\n                const firstChar = item.name.charCodeAt(0);\n                const [start, end] = koreanUniCodeList[selectedCharacter] || [];\n                return firstChar >= start && firstChar < end;\n            }\n            if (currentTab === 1) {\n                const firstChar = item.name.charAt(0).toUpperCase();\n                return firstChar === selectedCharacter.toUpperCase();\n            }\n            return false;\n        });\n        setFilterItems(filtered);\n    \n        // 체크된 항목들이 현재 필터링된 목록에 있는지 확인하고, 없는 항목은 체크 해제\n        const updatedCheckedList = checkedList.filter(number =>\n            filtered.some(item => item.number === number)\n        );\n        setCheckedList(updatedCheckedList);\n    }, [selectedCharacter, currentTab, checkedList]);\n    \n\n    useEffect(() => {\n        const selected = checkedList.map((number) => {\n            return dummyData.KoreanBrandList.find(item => item.number === number) || dummyData.ApbBrandList.find(item => item.number === number);\n        });\n        setSelectedItems(selected);\n    }, [checkedList]);\n\n    const handleCheckChange = (item) => {\n        const newCheckedList = checkedList.includes(item.number)\n            ? checkedList.filter((checkedItem) => checkedItem !== item.number)\n            : [...checkedList, item.number];\n        setCheckedList(newCheckedList);\n    };\n\n    const handleClick = (char) => {\n        setSelectedCharacter(char);\n        console.log(char)\n    };\n\n    return (\n        <>\n            <div className=\"box__characters-wrap\">\n                <ul className=\"list__characters\">\n                    {(currentTab === 1 ? alphabetList : koreanUnicode).map((item, idx) => (\n                        <li className=\"list-item\" key={idx}>\n                            <button\n                                onClick={() => handleClick(item)}\n                                className={classNames('button__character', { 'button__character--active': item === selectedCharacter })}\n                            >\n                                {item}\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            <div className=\"box__brand-info\">\n                {filterItems.length > 0 ? (\n                    <ul className=\"list__brand\">\n                        {filterItems.map((item) => (\n                            <li className=\"list-item\" key={item.number}>\n                                <input\n                                    type=\"checkbox\"\n                                    id={`checkbox-${item.number}`}\n                                    className=\"form__checkbox\"\n                                    checked={checkedList.includes(item.number)}\n                                    onChange={() => handleCheckChange(item)}\n                                    aria-checked={checkedList.includes(item.number)}\n                                />\n                                <label htmlFor={`checkbox-${item.number}`} className=\"form__label\">\n                                    {item.name}\n                                </label>\n                            </li>\n                        ))}\n                    </ul>\n                ) : (\n                    <div className=\"box__brand-notice\">\n                        <p className=\"text\">브랜드가 없습니다.</p>\n                        <span>다른 브랜드를 선택해주세요.</span>\n                    </div>\n                )}\n            </div>\n            <div className=\"box__filtered-wrap\">\n                {selectedItems.length > 0 && (\n                    <div className=\"box__selected-brand\">\n                        <ul className=\"list__selected-brands\">\n                            {selectedItems.map((selectedItem, idx) => (\n                                <li className=\"list-item\" key={selectedItem?.number || idx}>\n                                    <span className=\"text__brand\">{selectedItem?.name}</span>\n                                    <button\n                                        type=\"button\"\n                                        className=\"button__cancel\"\n                                        onClick={() => setCheckedList(checkedList.filter((id) => id !== selectedItem.number))}\n                                    >\n                                        <span className=\"for-a11y\">삭제</span>\n                                    </button>\n                                </li>\n                            ))}\n                        </ul>\n                        <div className=\"box__reset\">\n                            <button\n                                type=\"button\"\n                                className=\"button__reset\"\n                                onClick={() => setCheckedList([])}\n                            >\n                                <span className=\"for-a11y\">선택 초기화</span>\n                            </button>\n                        </div>\n                    </div>\n                )}\n                <div className=\"box__filtered-footer\">\n                    <button type=\"button\" className=\"button button__cancel\">\n                        취소\n                    </button>\n                    <button type=\"button\" className=\"button button__confirm\">\n                        적용\n                    </button>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default SelectCharacterFilter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}