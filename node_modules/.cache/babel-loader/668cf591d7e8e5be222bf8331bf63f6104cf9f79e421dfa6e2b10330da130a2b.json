{"ast":null,"code":"var _jsxFileName = \"/Users/sunny/Desktop/react/study_react_fe3_kimsuhyun/react-practice/src/components/SelectedCharacter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport classNames from \"classnames\";\nimport dummyData from '../DummyData/dummyData.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst koreanUnicode = ['\\u1100',\n// ㄱ\n'\\u1102',\n// ㄴ\n'\\u1103',\n// ㄷ\n'\\u1105',\n// ㄹ\n'\\u1106',\n// ㅁ\n'\\u1107',\n// ㅂ\n'\\u1109',\n// ㅅ\n'\\u110B',\n// ㅇ\n'\\u110C',\n// ㅈ\n'\\u110E',\n// ㅊ\n'\\u110F',\n// ㅋ\n'\\u1110',\n// ㅌ\n'\\u1111',\n// ㅍ\n'\\u1112' // ㅎ\n];\nconst koreanUniCodeList = {\n  '\\u1100': [0xAC00, 0xB098],\n  // '가' ~ '낗'\n  '\\u1102': [0xB098, 0xB2E4],\n  // '나' ~ '닣'\n  '\\u1103': [0xB2E4, 0xB77C],\n  // '다' ~ '띻'\n  '\\u1105': [0xB77C, 0xBAA8],\n  // '라' ~ '맇'\n  '\\u1106': [0xBAA8, 0xBCF4],\n  // '마' ~ '밓'\n  '\\u1107': [0xBCF4, 0xC0AC],\n  // '바' ~ '빟'\n  '\\u1109': [0xC0AC, 0xC544],\n  // '사' ~ '싷'\n  '\\u110B': [0xC544, 0xC790],\n  // '아' ~ '잏'\n  '\\u110C': [0xC790, 0xCC28],\n  // '자' ~ '짛'\n  '\\u110E': [0xCC28, 0xCE74],\n  // '차' ~ '칳'\n  '\\u110F': [0xCE74, 0xD0C0],\n  // '카' ~ '킿'\n  '\\u1110': [0xD0C0, 0xD30C],\n  // '타' ~ '팋'\n  '\\u1111': [0xD30C, 0xD558],\n  // '파' ~ '핗'\n  '\\u1112': [0xD558, 0xD7A4] // '하' ~ '힣'\n};\nconst alphabetList = Array.from({\n  length: 26\n}, (_, i) => String.fromCharCode(97 + i));\nconst SelectCharacterFilter = ({\n  currentTab\n}) => {\n  _s();\n  const [isActive, setActive] = useState(0);\n  const [selectedCharacter, setSelectedCharacter] = useState('\\u1100');\n  const [checkedList, setCheckedList] = useState([]); // checkedList는 필터링 영향을 받지 않음\n  const [filterItems, setFilterItems] = useState([]); // filterItems는 currentTab과 selectedCharacter에 따라 필터링\n\n  // useEffect(() => {\n  //     // currentTab에 따라 데이터 선택\n  //     const data = currentTab === 0 ? dummyData.KoreanBrandList : dummyData.ApbBrandList;\n\n  //     // 필터링된 데이터 처리\n  //     const filtered = data.filter(item => {\n  //         if (currentTab === 0) {\n  //             const firstChar = item.name.charCodeAt(0);\n  //             const [start, end] = koreanUniCodeList[selectedCharacter] || [];\n  //             return firstChar >= start && firstChar < end;\n  //         }\n  //         else if (currentTab === 1) {\n  //             const firstChar = item.name.charAt(0).toUpperCase();\n  //             return firstChar === selectedCharacter.toUpperCase();;\n  //         }\n  //         return false;\n  //     });\n  //     setFilterItems(filtered);\n\n  // }, [selectedCharacter, currentTab]);  // selectedCharacter, currentTab 변경 시마다 필터된 목록만 업데이트\n  useEffect(() => {\n    const combinedData = [...dummyData.KoreanBrandList, ...dummyData.ApbBrandList];\n    const filtered = combinedData.filter(item => {\n      if (currentTab === 0) {\n        const firstChar = item.name.charCodeAt(0);\n        const [start, end] = koreanUniCodeList[selectedCharacter] || [];\n        return firstChar >= start && firstChar < end;\n      }\n      if (currentTab === 1) {\n        const firstChar = item.name.charAt(0).toUpperCase();\n        return firstChar === selectedCharacter;\n      }\n      return false;\n    });\n    console.log(filtered, \"Filtered items after update\"); // 필터링된 아이템을 로그로 확인\n    setFilterItems(filtered);\n  }, [selectedCharacter, currentTab]);\n  const handleCheckChange = item => {\n    const newCheckedList = checkedList.includes(item.number) ? checkedList.filter(checkedItem => checkedItem !== item.number) : [...checkedList, item.number];\n    setCheckedList(newCheckedList);\n    console.log(item, \"item\", checkedList, \"checked\");\n  };\n  const handleClick = char => {\n    // 선택한 문자 변경\n    setSelectedCharacter(char);\n    setActive(alphabetList.indexOf(char) !== -1 ? alphabetList.indexOf(char) : koreanUnicode.indexOf(char));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box__characters-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list__characters\",\n        children: (currentTab === 1 ? alphabetList : koreanUnicode).map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-item\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleClick(item),\n            className: classNames('button__character', {\n              'button__character--active': item === selectedCharacter\n            }),\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box__brand-info\",\n      children: filterItems.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list__brand\",\n        children: filterItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `checkbox-${item.number}`,\n            className: \"form__checkbox\",\n            checked: checkedList.includes(item.number),\n            onChange: () => handleCheckChange(item),\n            \"aria-checked\": checkedList.includes(item.number)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `checkbox-${item.number}`,\n            className: \"form__label\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 33\n          }, this)]\n        }, item.number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box__brand-notice\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text\",\n          children: \"\\uBE0C\\uB79C\\uB4DC\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uB2E4\\uB978 \\uBE0C\\uB79C\\uB4DC\\uB97C \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box__filtered-wrap\",\n      children: [checkedList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box__selected-brand\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list__selected-brands\",\n          children: checkedList.map((number, idx) => {\n            // checkedList의 number와 일치하는 item 찾기\n            const selectedItem = filterItems.find(item => item.number === number);\n\n            // selectedItem이 undefined일 경우, 이를 처리할 방법을 추가할 수 있음\n            if (!selectedItem) {\n              console.error(`No item found for number: ${number}`);\n            }\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text__brand\",\n                children: selectedItem ? selectedItem.name : 'Brand not found'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"button__cancel\",\n                onClick: () => setCheckedList(checkedList.filter(id => id !== number)),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"for-a11y\",\n                  children: \"\\uC0AD\\uC81C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)]\n            }, number, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box__reset\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"button__reset\",\n            onClick: () => setCheckedList([]),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"for-a11y\",\n              children: \"\\uC120\\uD0DD \\uCD08\\uAE30\\uD654\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box__filtered-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"button button__cancel\",\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"button button__confirm\",\n          children: \"\\uC801\\uC6A9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(SelectCharacterFilter, \"yvXUDx94lUvSUNMuQUDEw879L0g=\");\n_c = SelectCharacterFilter;\nexport default SelectCharacterFilter;\nvar _c;\n$RefreshReg$(_c, \"SelectCharacterFilter\");","map":{"version":3,"names":["React","useState","useEffect","classNames","dummyData","jsxDEV","_jsxDEV","Fragment","_Fragment","koreanUnicode","koreanUniCodeList","alphabetList","Array","from","length","_","i","String","fromCharCode","SelectCharacterFilter","currentTab","_s","isActive","setActive","selectedCharacter","setSelectedCharacter","checkedList","setCheckedList","filterItems","setFilterItems","combinedData","KoreanBrandList","ApbBrandList","filtered","filter","item","firstChar","name","charCodeAt","start","end","charAt","toUpperCase","console","log","handleCheckChange","newCheckedList","includes","number","checkedItem","handleClick","char","indexOf","children","className","map","idx","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","id","checked","onChange","htmlFor","selectedItem","find","error","_c","$RefreshReg$"],"sources":["/Users/sunny/Desktop/react/study_react_fe3_kimsuhyun/react-practice/src/components/SelectedCharacter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport classNames from \"classnames\";\nimport dummyData from '../DummyData/dummyData.json';\n\nconst koreanUnicode = [\n    '\\u1100', // ㄱ\n    '\\u1102', // ㄴ\n    '\\u1103', // ㄷ\n    '\\u1105', // ㄹ\n    '\\u1106', // ㅁ\n    '\\u1107', // ㅂ\n    '\\u1109', // ㅅ\n    '\\u110B', // ㅇ\n    '\\u110C', // ㅈ\n    '\\u110E', // ㅊ\n    '\\u110F', // ㅋ\n    '\\u1110', // ㅌ\n    '\\u1111', // ㅍ\n    '\\u1112', // ㅎ\n];\n\nconst koreanUniCodeList = {\n    '\\u1100': [0xAC00, 0xB098],  // '가' ~ '낗'\n    '\\u1102': [0xB098, 0xB2E4],  // '나' ~ '닣'\n    '\\u1103': [0xB2E4, 0xB77C],  // '다' ~ '띻'\n    '\\u1105': [0xB77C, 0xBAA8],  // '라' ~ '맇'\n    '\\u1106': [0xBAA8, 0xBCF4],  // '마' ~ '밓'\n    '\\u1107': [0xBCF4, 0xC0AC],  // '바' ~ '빟'\n    '\\u1109': [0xC0AC, 0xC544],  // '사' ~ '싷'\n    '\\u110B': [0xC544, 0xC790],  // '아' ~ '잏'\n    '\\u110C': [0xC790, 0xCC28],  // '자' ~ '짛'\n    '\\u110E': [0xCC28, 0xCE74],  // '차' ~ '칳'\n    '\\u110F': [0xCE74, 0xD0C0],  // '카' ~ '킿'\n    '\\u1110': [0xD0C0, 0xD30C],  // '타' ~ '팋'\n    '\\u1111': [0xD30C, 0xD558],  // '파' ~ '핗'\n    '\\u1112': [0xD558, 0xD7A4],  // '하' ~ '힣'\n};\n\nconst alphabetList = Array.from({ length: 26 }, (_, i) => String.fromCharCode(97 + i));\n\nconst SelectCharacterFilter = ({ currentTab }) => {\n    const [isActive, setActive] = useState(0);\n    const [selectedCharacter, setSelectedCharacter] = useState('\\u1100');\n    const [checkedList, setCheckedList] = useState([]); // checkedList는 필터링 영향을 받지 않음\n    const [filterItems, setFilterItems] = useState([]); // filterItems는 currentTab과 selectedCharacter에 따라 필터링\n\n    // useEffect(() => {\n    //     // currentTab에 따라 데이터 선택\n    //     const data = currentTab === 0 ? dummyData.KoreanBrandList : dummyData.ApbBrandList;\n        \n    //     // 필터링된 데이터 처리\n    //     const filtered = data.filter(item => {\n    //         if (currentTab === 0) {\n    //             const firstChar = item.name.charCodeAt(0);\n    //             const [start, end] = koreanUniCodeList[selectedCharacter] || [];\n    //             return firstChar >= start && firstChar < end;\n    //         }\n    //         else if (currentTab === 1) {\n    //             const firstChar = item.name.charAt(0).toUpperCase();\n    //             return firstChar === selectedCharacter.toUpperCase();;\n    //         }\n    //         return false;\n    //     });\n    //     setFilterItems(filtered);\n\n    // }, [selectedCharacter, currentTab]);  // selectedCharacter, currentTab 변경 시마다 필터된 목록만 업데이트\n    useEffect(() => {\n        const combinedData = [\n            ...dummyData.KoreanBrandList,\n            ...dummyData.ApbBrandList,\n        ];\n    \n        const filtered = combinedData.filter(item => {\n            if (currentTab === 0) {\n                const firstChar = item.name.charCodeAt(0);\n                const [start, end] = koreanUniCodeList[selectedCharacter] || [];\n                return firstChar >= start && firstChar < end;\n            }\n            if (currentTab === 1) {\n                const firstChar = item.name.charAt(0).toUpperCase();\n                return firstChar === selectedCharacter;\n            }\n            return false;\n        });\n    \n        console.log(filtered, \"Filtered items after update\");  // 필터링된 아이템을 로그로 확인\n        setFilterItems(filtered);\n    }, [selectedCharacter, currentTab]);\n    \n\n    const handleCheckChange = (item) => {\n        const newCheckedList = checkedList.includes(item.number)\n        ? checkedList.filter((checkedItem) => checkedItem !== item.number)\n        : [...checkedList, item.number];\n        setCheckedList(newCheckedList);\n        console.log(item,\"item\", checkedList, \"checked\")\n    };\n\n    const handleClick = (char) => {\n        // 선택한 문자 변경\n        setSelectedCharacter(char);\n        setActive(alphabetList.indexOf(char) !== -1 ? alphabetList.indexOf(char) : koreanUnicode.indexOf(char));\n    };\n\n    return (\n        <>\n            <div className=\"box__characters-wrap\">\n                <ul className=\"list__characters\">\n                    {(currentTab === 1 ? alphabetList : koreanUnicode).map((item, idx) => (\n                        <li className=\"list-item\" key={idx}>\n                            <button\n                                onClick={() => handleClick(item)}\n                                className={classNames('button__character', { 'button__character--active': item === selectedCharacter })}\n                            >\n                                {item}\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            <div className=\"box__brand-info\">\n                {filterItems.length > 0 ? (\n                    <ul className=\"list__brand\">\n                        {filterItems.map((item) => (\n                            <li className=\"list-item\" key={item.number}>\n                                <input\n                                    type=\"checkbox\"\n                                    id={`checkbox-${item.number}`}\n                                    className=\"form__checkbox\"\n                                    checked={checkedList.includes(item.number)}\n                                    onChange={() => handleCheckChange(item)}\n                                    aria-checked={checkedList.includes(item.number)}\n                                />\n                                <label htmlFor={`checkbox-${item.number}`} className=\"form__label\">\n                                    {item.name}\n                                </label>\n                            </li>\n                        ))}\n                    </ul>\n                ) : (\n                    <div className=\"box__brand-notice\">\n                        <p className=\"text\">브랜드가 없습니다.</p>\n                        <span>다른 브랜드를 선택해주세요.</span>\n                    </div>\n                )}\n            </div>\n            <div className=\"box__filtered-wrap\">\n                {checkedList.length > 0 && (\n                    <div className=\"box__selected-brand\">\n                        <ul className=\"list__selected-brands\">\n    {checkedList.map((number, idx) => {\n        // checkedList의 number와 일치하는 item 찾기\n        const selectedItem = filterItems.find(item => item.number === number);\n        \n        // selectedItem이 undefined일 경우, 이를 처리할 방법을 추가할 수 있음\n        if (!selectedItem) {\n            console.error(`No item found for number: ${number}`);\n        }\n        \n        return (\n            <li className=\"list-item\" key={number}>\n                <span className=\"text__brand\">{selectedItem ? selectedItem.name : 'Brand not found'}</span>\n                <button\n                    type=\"button\"\n                    className=\"button__cancel\"\n                    onClick={() => setCheckedList(checkedList.filter((id) => id !== number))}\n                >\n                    <span className=\"for-a11y\">삭제</span>\n                </button>\n            </li>\n        );\n    })}\n</ul>\n\n                        <div className=\"box__reset\">\n                            <button\n                                type=\"button\"\n                                className=\"button__reset\"\n                                onClick={() => setCheckedList([])}\n                            >\n                                <span className=\"for-a11y\">선택 초기화</span>\n                            </button>\n                        </div>\n                    </div>\n                )}\n                <div className=\"box__filtered-footer\">\n                    <button type=\"button\" className=\"button button__cancel\">\n                        취소\n                    </button>\n                    <button type=\"button\" className=\"button button__confirm\">\n                        적용\n                    </button>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default SelectCharacterFilter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}